package egovframework.ksdmWeb.admin.researchData.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import egovframework.ksdmWeb.admin.researchData.service.ResearchDataService;
import egovframework.ksdmWeb.admin.researchData.service.ResearchDataVo;
import egovframework.ksdmWeb.admin.researchData.service.impl.ResearchDataMapper;
import egovframework.ksdmWeb.common.paging.PagingVo;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/admin")
@Slf4j
public class ResearchDataController {

	@Resource(name = "researchDataService")
	private ResearchDataService researchDataService;
	
	@Resource(name = "researchDataMapper")
	private ResearchDataMapper researchDataMapper;
	
	@GetMapping("/researchDataPage.do")
	public String researchDataPage(Model model) {
		log.debug("/researchDataPage.do");
		
		List<ResearchDataVo> researchDataVos = researchDataService.getAllSubjectList();
		
		model.addAttribute("researchDataVos", researchDataVos);
		
		return "admin/researchData/researchDataPage";
	}
	
	@GetMapping("/getResearchData.do")
	@ResponseBody
	@SuppressWarnings("unchecked")
	public Object getResearchData(@ModelAttribute PagingVo pagingVo) {
		log.debug("<== {}", pagingVo);
		
		Map<String, Object> data = researchDataService.getResearchData(pagingVo);
		
		log.debug("==> researchDataVos Count: {}", ((List<ResearchDataVo>) data.get("researchDataVos")).size());
		return data;
	}
	
	@PostMapping(value = "/uploadResearchData.do", consumes = "multipart/form-data")
	@ResponseBody
	public Object uploadResearchData(@RequestParam("file") MultipartFile file) {
		log.debug("<== {}", file);
		
		Map<String, Object> result = researchDataService.uploadResearchData(file);
		
		log.debug("==> {}");
		return result;
	}
}
