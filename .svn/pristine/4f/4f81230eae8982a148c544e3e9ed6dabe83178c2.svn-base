package egovframework.ksdmWeb.admin.boardManagement.common.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import egovframework.ksdmWeb.admin.boardManagement.common.service.AdminBoardService;
import egovframework.ksdmWeb.common.service.CommonDataService;
import egovframework.ksdmWeb.common.vo.BoardVo;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/admin")
@Slf4j
public class AdminBoardController {
	
	@Resource(name = "commonDataService")
	private CommonDataService commonDataService;
	
	@Resource(name = "adminBoardService")
	private AdminBoardService adminBoardService;
	
	@GetMapping("/boardListPage.do")
	public String boardListPage(@RequestParam("boardDiv") String boardDiv, Model model) {
		log.debug("/boardListPage.do");
		
		model.addAttribute("boardDiv", boardDiv);
		
		return "/admin/boardManagement/boardListPage";
	}
	
	@GetMapping("/boardDetailPage.do")
	public String boardDetailPage(@RequestParam("boardNum") String boardNum, Model model) {
		log.debug("/boardDetailPage.do");
		
		BoardVo boardVo = commonDataService.getBoardByBoardNum(boardNum);
		
		model.addAttribute("boardVo", boardVo);
		model.addAttribute("boardNum", boardNum);
		
		return "/admin/boardManagement/boardDetailPage";
	}
	
	@GetMapping("/boardRegistPage.do")
	public String boardRegistPage(@RequestParam("boardDiv") String boardDiv, Model model) {
		log.debug("/boardRegistPage.do");
		
		model.addAttribute("boardDiv", boardDiv);
		
		return "/admin/boardManagement/boardRegistPage";
	}
	
	@PostMapping(value = "/boardRegistConfirm.do", consumes = "multipart/form-data")
	@ResponseBody
	public Object boardRegistConfirm(@RequestParam("boardDiv") String boardDiv,
						             @RequestParam("boardSubject") String boardSubject,
						             @RequestParam("boardContents") String boardContents,
						             @RequestParam(value = "file", required = false) MultipartFile file) {
		log.debug("<== boardDiv: {}, boardSubject: {}, boardContents: {}, file: {}", boardDiv, boardSubject, boardContents, file);
		
		BoardVo boardVo = new BoardVo();
		boardVo.setBoardDiv(boardDiv);
		boardVo.setBoardSubject(boardSubject);
		boardVo.setBoardContents(boardContents);
		boardVo.setFile(file);
		
		Map<String, Object> result = adminBoardService.boardRegistConfirm(boardVo);
		
		log.debug("==> {}", result);
		return result;
	}
	
	@PostMapping("/boardDeleteConfirm.do")
	@ResponseBody
	public Object boardDeleteConfirm(@RequestBody List<String> boardNums) {
		log.debug("<== {}", boardNums);
		
		int result = 0;
		
		for (String boardNum : boardNums) {
			
			BoardVo boardVo = commonDataService.getBoardByBoardNum(boardNum);
			result += adminBoardService.boardDeleteConfirm(boardVo);
		}
		
		log.debug("==> {}", result);
		return result;
	}
	
	@PostMapping(value = "/boardModifyConfirm.do")
	@ResponseBody
	public Object boardModifyConfirm(@ModelAttribute BoardVo boardVo) {
		log.debug("<== {}", boardVo);
		
		Map<String, Object> result = adminBoardService.boardModifyConfirm(boardVo);
		
		log.debug("==> {}", result);
		return result;
	}
}
